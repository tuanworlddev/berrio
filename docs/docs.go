// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/orders": {
            "post": {
                "description": "Generates reports orders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Generates reports orders",
                "parameters": [
                    {
                        "description": "Report request parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.AnalyticOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/services.ChartData"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters or date format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/reports": {
            "post": {
                "description": "Generates two Excel report files based on API key and date range, zips them, and returns the ZIP file for download",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/zip"
                ],
                "tags": [
                    "reports"
                ],
                "summary": "Generate and download report files",
                "parameters": [
                    {
                        "description": "Report request parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.ReportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ZIP file containing report1.xlsx and report2.xlsx",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters or date format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.AnalyticOrderRequest": {
            "type": "object",
            "required": [
                "apiKey",
                "dateFrom",
                "dateTo"
            ],
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "dateFrom": {
                    "type": "string"
                },
                "dateTo": {
                    "type": "string"
                }
            }
        },
        "controllers.ReportRequest": {
            "type": "object",
            "required": [
                "apiKey",
                "dateFrom",
                "dateTo",
                "discount",
                "tax"
            ],
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "dateFrom": {
                    "type": "string"
                },
                "dateTo": {
                    "type": "string"
                },
                "discount": {
                    "type": "number"
                },
                "tax": {
                    "type": "number"
                }
            }
        },
        "services.ChartData": {
            "type": "object",
            "properties": {
                "nmID": {
                    "type": "integer"
                },
                "ordersCount": {
                    "type": "integer"
                },
                "ordersSumRub": {
                    "type": "integer"
                },
                "prevOrdersCount": {
                    "type": "integer"
                },
                "prevOrdersSumRub": {
                    "type": "integer"
                },
                "vendorCode": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "API Documentation",
	Description:      "Report Service.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
